import machine
from machine import Pin, I2C
import time
import json
import network
import urequests as requests
from mpu6050 import MPU6050

# Resto del código...

# Inicializar MPU6050
i2c = I2C(scl=Pin(5), sda=Pin(4))
mpu = MPU6050(i2c)
i2c.init()

# Resto del código...

# Configuración de Wi-Fi
ssid = "LAB INTELIGENCIA_RED PARA TODOS"
password = "Lab inteligencia@3187088*"

# Pines GPIO para el MUX
S0_PIN = 2
S1_PIN = 14
S2_PIN = 12
S3_PIN = 13


i2c.init()

# Inicializar MPU6050
mpu = MPU6050(i2c)

# Configuración de los pines GPIO para el MUX
s0 = Pin(S0_PIN, Pin.OUT)
s1 = Pin(S1_PIN, Pin.OUT)
s2 = Pin(S2_PIN, Pin.OUT)
s3 = Pin(S3_PIN, Pin.OUT)

# Funciones para seleccionar el canal del MUX
def out1():
    s0.off()
    s1.on()
    s2.off()
    s3.off()

def out2():
    s0.on()
    s1.on()
    s2.off()
    s3.off()

def out3():
    s0.off()
    s1.off()
    s2.on()
    s3.off()

# Inicializar MPU6050 y el MUX
def init_sensors():
    out1()
    out2()
    out3()

    if mpu.testConnection():
        print("Sensor iniciado correctamente")
    else:
        print("Error al iniciar el sensor")

# Obtener datos del giroscopio y acelerómetro del MPU6050
def get_sensor_data():
    gyro_data = {}
    accel_data = {}

    out1()
    gyro_data['gXHD'], gyro_data['gYHD'], gyro_data['gZHD'] = mpu.get_rotation()
    accel_data['aXHD'], accel_data['aYHD'], accel_data['aZHD'] = mpu.get_acceleration()

    out2()
    gyro_data['gXCOD'], gyro_data['gYCOD'], gyro_data['gZCOD'] = mpu.get_rotation()
    accel_data['aXCOD'], accel_data['aYCOD'], accel_data['aZCOD'] = mpu.get_acceleration()

    out3()
    gyro_data['gXMD'], gyro_data['gYMD'], gyro_data['gZMD'] = mpu.get_rotation()
    accel_data['aXMD'], accel_data['aYMD'], accel_data['aZMD'] = mpu.get_acceleration()

    sensor_data = {'gyro': gyro_data, 'accel': accel_data}
    return sensor_data

# Conectar a Wi-Fi
def connect_wifi():
    wifi = network.WLAN(network.STA_IF)
    wifi.active(True)
    wifi.connect(ssid, password)
    while not wifi.isconnected():
        pass
    print("WiFi conectado")
    print("Ingrese desde un navegador web usando la siguiente IP:")
    print(wifi.ifconfig()[0])

# Enviar datos a Blender usando una solicitud HTTP POST
def send_data(data):
    url = "http://<blender_ip>:<blender_port>/receive_data"  # Reemplazar con la dirección IP y puerto de Blender
    headers = {"Content-Type": "application/json"}
    response = requests.post(url, json=data, headers=headers)
    print("Respuesta del servidor:", response.text)

# Inicializar sensores y conectar a Wi-Fi
init_sensors()
connect_wifi()

# Bucle principal
while True:
    # Leer datos del sensor
    sensor_data = get_sensor_data()

    # Enviar datos a Blender
    send_data(sensor_data)

    # Esperar 1 segundo
    time.sleep(1)
